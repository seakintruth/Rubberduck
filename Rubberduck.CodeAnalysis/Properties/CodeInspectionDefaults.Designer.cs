//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.CodeAnalysis.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.9.0.0")]
    public sealed partial class CodeInspectionDefaults : global::System.Configuration.ApplicationSettingsBase {
        
        private static CodeInspectionDefaults defaultInstance = ((CodeInspectionDefaults)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new CodeInspectionDefaults())));
        
        public static CodeInspectionDefaults Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<CodeInspectionSettings xmlns:xsi=\"http:" +
            "//www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchem" +
            "a\">\r\n  <CodeInspections>\r\n    <CodeInspection Name=\"BooleanAssignedInIfElseInspe" +
            "ction\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" /" +
            ">\r\n    <CodeInspection Name=\"ObsoleteErrorSyntaxInspection\" Severity=\"Suggestion" +
            "\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"StopKeywo" +
            "rdInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues\" />\r\n    <" +
            "CodeInspection Name=\"UnhandledOnErrorResumeNextInspection\" Severity=\"Warning\" In" +
            "spectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"EmptyStringLitera" +
            "lInspection\" Severity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n    <" +
            "CodeInspection Name=\"ImplicitByRefModifierInspection\" Severity=\"Hint\" Inspection" +
            "Type=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"FunctionReturnValueNotUse" +
            "dInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <Code" +
            "Inspection Name=\"IllegalAnnotationInspection\" Severity=\"Error\" InspectionType=\"R" +
            "ubberduckOpportunities\" />\r\n    <CodeInspection Name=\"RedundantByRefModifierInsp" +
            "ection\" Severity=\"DoNotShow\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeIns" +
            "pection Name=\"MissingAttributeInspection\" Severity=\"Warning\" InspectionType=\"Rub" +
            "berduckOpportunities\" />\r\n    <CodeInspection Name=\"AttributeOutOfSyncInspection" +
            "\" Severity=\"Warning\" InspectionType=\"RubberduckOpportunities\" />\r\n    <CodeInspe" +
            "ction Name=\"MissingAnnotationArgumentInspection\" Severity=\"Error\" InspectionType" +
            "=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"ModuleScopeDimKeywordInspecti" +
            "on\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeIn" +
            "spection Name=\"MultilineParameterInspection\" Severity=\"Suggestion\" InspectionTyp" +
            "e=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"MultipleDe" +
            "clarationsInspection\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReada" +
            "bilityIssues\" />\r\n    <CodeInspection Name=\"ObsoleteCallStatementInspection\" Sev" +
            "erity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspectio" +
            "n Name=\"ObsoleteCommentSyntaxInspection\" Severity=\"Suggestion\" InspectionType=\"L" +
            "anguageOpportunities\" />\r\n    <CodeInspection Name=\"ObsoleteLetStatementInspecti" +
            "on\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeIn" +
            "spection Name=\"OptionBaseInspection\" Severity=\"Hint\" InspectionType=\"Maintainabi" +
            "lityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"RedundantOptionInspectio" +
            "n\" Severity=\"Hint\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspectio" +
            "n Name=\"OptionExplicitInspection\" Severity=\"Error\" InspectionType=\"CodeQualityIs" +
            "sues\" />\r\n    <CodeInspection Name=\"ProcedureCanBeWrittenAsFunctionInspection\" S" +
            "everity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspect" +
            "ion Name=\"ApplicationWorksheetFunctionInspection\" Severity=\"Suggestion\" Inspecti" +
            "onType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"AssignedByValParameterI" +
            "nspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeIn" +
            "spection Name=\"EmptyModuleInspection\" Severity=\"Hint\" InspectionType=\"Maintainab" +
            "ilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"LineLabelNotUsedInspect" +
            "ion\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspecti" +
            "on Name=\"IntegerDataTypeInspection\" Severity=\"Hint\" InspectionType=\"CodeQualityI" +
            "ssues\" />\r\n    <CodeInspection Name=\"ShadowedDeclarationInspection\" Severity=\"Do" +
            "NotShow\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"Consta" +
            "ntNotUsedInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n " +
            "   <CodeInspection Name=\"DefaultProjectNameInspection\" Severity=\"Suggestion\" Ins" +
            "pectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"" +
            "EmptyCaseBlockInspection\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndR" +
            "eadabilityIssues\" />\r\n    <CodeInspection Name=\"EmptyDoWhileBlockInspection\" Sev" +
            "erity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    " +
            "<CodeInspection Name=\"EmptyElseBlockInspection\" Severity=\"Warning\" InspectionTyp" +
            "e=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"EmptyForEa" +
            "chBlockInspection\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadabil" +
            "ityIssues\" />\r\n    <CodeInspection Name=\"EmptyForLoopBlockInspection\" Severity=\"" +
            "Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspe" +
            "ction Name=\"EmptyIfBlockInspection\" Severity=\"Warning\" InspectionType=\"Maintaina" +
            "bilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"EmptyWhileWendBlockIns" +
            "pection\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\"" +
            " />\r\n    <CodeInspection Name=\"EncapsulatePublicFieldInspection\" Severity=\"Sugge" +
            "stion\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspect" +
            "ion Name=\"HostSpecificExpressionInspection\" Severity=\"Warning\" InspectionType=\"L" +
            "anguageOpportunities\" />\r\n    <CodeInspection Name=\"HungarianNotationInspection\"" +
            " Severity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n" +
            "    <CodeInspection Name=\"ImplicitActiveSheetReferenceInspection\" Severity=\"Warn" +
            "ing\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"Implic" +
            "itActiveWorkbookReferenceInspection\" Severity=\"Warning\" InspectionType=\"Language" +
            "Opportunities\" />\r\n    <CodeInspection Name=\"ImplicitDefaultMemberAssignmentInsp" +
            "ection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <Co" +
            "deInspection Name=\"ImplicitPublicMemberInspection\" Severity=\"Hint\" InspectionTyp" +
            "e=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"ImplicitVariantReturnTyp" +
            "eInspection\" Severity=\"Hint\" InspectionType=\"LanguageOpportunities\" />\r\n    <Cod" +
            "eInspection Name=\"MemberNotOnInterfaceInspection\" Severity=\"Warning\" InspectionT" +
            "ype=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"MoveFieldCloserToUsageInsp" +
            "ection\" Severity=\"Hint\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r" +
            "\n    <CodeInspection Name=\"NonReturningFunctionInspection\" Severity=\"Error\" Insp" +
            "ectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"ObjectVariableNotSe" +
            "tInspection\" Severity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeIn" +
            "spection Name=\"ObsoleteGlobalInspection\" Severity=\"Suggestion\" InspectionType=\"L" +
            "anguageOpportunities\" />\r\n    <CodeInspection Name=\"ObsoleteTypeHintInspection\" " +
            "Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspec" +
            "tion Name=\"ParameterCanBeByValInspection\" Severity=\"Suggestion\" InspectionType=\"" +
            "MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"ParameterNotU" +
            "sedInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <Co" +
            "deInspection Name=\"ProcedureNotUsedInspection\" Severity=\"Warning\" InspectionType" +
            "=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"SelfAssignedDeclarationInspec" +
            "tion\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInsp" +
            "ection Name=\"UnassignedVariableUsageInspection\" Severity=\"Error\" InspectionType=" +
            "\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"UndeclaredVariableInspection\" " +
            "Severity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name" +
            "=\"UntypedFunctionUsageInspection\" Severity=\"Hint\" InspectionType=\"LanguageOpport" +
            "unities\" />\r\n    <CodeInspection Name=\"UseMeaningfulNameInspection\" Severity=\"Su" +
            "ggestion\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInsp" +
            "ection Name=\"VariableNotAssignedInspection\" Severity=\"Warning\" InspectionType=\"C" +
            "odeQualityIssues\" />\r\n    <CodeInspection Name=\"VariableNotUsedInspection\" Sever" +
            "ity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"V" +
            "ariableTypeNotDeclaredInspection\" Severity=\"Warning\" InspectionType=\"LanguageOpp" +
            "ortunities\" />\r\n    <CodeInspection Name=\"WriteOnlyPropertyInspection\" Severity=" +
            "\"Suggestion\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"De" +
            "fTypeStatementInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportun" +
            "ities\" />\r\n    <CodeInspection Name=\"StepIsNotSpecifiedInspection\" Severity=\"DoN" +
            "otShow\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"Ste" +
            "pOneIsRedundantInspection\" Severity=\"Hint\" InspectionType=\"LanguageOpportunities" +
            "\" />\r\n    <CodeInspection Name=\"SheetAccessedUsingStringInspection\" Severity=\"Su" +
            "ggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"O" +
            "bsoleteMemberUsageInspection\" Severity=\"Warning\" InspectionType=\"Maintainability" +
            "AndReadabilityIssues\" />\r\n    <CodeInspection Name=\"ObsoleteCallingConventionIns" +
            "pection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInsp" +
            "ection Name=\"DuplicatedAnnotationInspection\" Severity=\"Error\" InspectionType=\"Ru" +
            "bberduckOpportunities\" />\r\n    <CodeInspection Name=\"ModuleWithoutFolderInspecti" +
            "on\" Severity=\"Suggestion\" InspectionType=\"RubberduckOpportunities\" />\r\n    <Code" +
            "Inspection Name=\"OnLocalErrorInspection\" Severity=\"Suggestion\" InspectionType=\"L" +
            "anguageOpportunities\" />\r\n    <CodeInspection Name=\"IsMissingOnInappropriateArgu" +
            "mentInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <C" +
            "odeInspection Name=\"IsMissingWithNonArgumentParameterInspection\" Severity=\"Warni" +
            "ng\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"AssignmentN" +
            "otUsedInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues\" />\r\n " +
            "   <CodeInspection Name=\"UnderscoreInPublicClassModuleMemberInspection\" Severity" +
            "=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"Exce" +
            "lUdfNameIsValidCellReferenceInspection\" Severity=\"Warning\" InspectionType=\"CodeQ" +
            "ualityIssues\" />\r\n  </CodeInspections>\r\n  <WhitelistedIdentifiers />\r\n  <RunInsp" +
            "ectionsOnSuccessfulParse>true</RunInspectionsOnSuccessfulParse>\r\n</CodeInspectio" +
            "nSettings>")]
        public global::Rubberduck.CodeAnalysis.Settings.CodeInspectionSettings CodeInspectionSettings {
            get {
                return ((global::Rubberduck.CodeAnalysis.Settings.CodeInspectionSettings)(this["CodeInspectionSettings"]));
            }
        }
    }
}
